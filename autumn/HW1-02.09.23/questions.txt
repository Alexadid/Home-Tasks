Ответы на вопросы:

1.
- компилируемый язык - нужно сначала написать свой код в определённой форме, а затем использовать компилятор для преобразования этого кода в машинный двоичный код. Этот этап компиляции обычно приводит к более быстрому и эффективному выполнению кода, поскольку он оптимизирован для данной архитектуры процессора.

- мультипарадигменный язык программирования - поддерживает различные парадигмы программирования, включая:
Процедурное программирование: можно писать код в процедурном стиле, организуя его вокруг функций и процедур.
Объектно-ориентированное программирование: C++ был одним из первых языков, внедривших концепции ООП, позволяющие создавать классы и объекты, инкапсулировать данные и поведение, а также использовать наследование и полиморфизм.
Обобщённое программирование: C++ поддерживает программирование с помощью шаблонов, позволяя создавать структуры данных и алгоритмы, которые работают с различными типами данных.
Функциональное программирование: Хотя C++ и не нельзя назвать функциональным языком в полной мере это слова, как тот же Haskell, он включает в себя некоторые атрибуты функционального программирования, такие как лямбда выражение.

- статически типизирован - типы переменных определяются во время компиляции, и компилятор проверяет совместимость типов, прежде чем разрешить определенные операции.

- низкоуровневые и высокоуровневые возможности:
Высокоуровневый: C++ предоставляет такие функции, как классы, объекты и т.д., которые позволяют разработчикам писать высокоуровневый абстрактный код для таких задач, как разработка приложений.
Низкоуровневый: C++ также допускает низкоуровневые манипуляции с памятью и прямой доступ к оборудованию, что делает его подходящим для программирования микрочипов...

2. Фундаментальные типы данных:
- bool (1 байт) - логический тип данных (значение false (0) или true (не 0), аналогично типу char)
- char (1 байт - символьный тип данных: сохраняет числовое значение, которое сопоставляется с таблицей ASCII.
- int (4 байта), short (2 байта), long (4 байта), long long (8 байта) - целочисленный тип данных, бывает как обычным (signed версии), так и сугубо неотрицательным (unsigned версии).
Начилие signed/unsigned версий.
- float (4 байта), double (8 байт) - тип числовых данных с плавающей точкой. Из особенностей можно указать неточность работы с данным типом данных в виду особенностей хранения их в памяти.
- void - отсутствие информации о типе, по сути, не является типом переменной. Используется для указателей и процедур.

3. Проблема переносимости.
Проблемы с переносимостью возникают, когда ПО, разработанное для одной системы, сталкивается с проблемами в другой из-за различий в оборудовании, операционной системе, компиляторах или зависимостях. Чтобы предотвратить это, используются кроссплатформенные библиотеки, избегаются специфичные для ОС функции и следует придерживаться языковых стандартов.

4. Определение, объявление, инициализация и присвоение.

- определение - создаётся переменная и выделяется память. Пример: int x;

- объявление - объявляется о существовании переменной без выделения памяти. Пример: extern int y;

- инициализация - присваивается начальное значение переменной во время объявления. Пример: int z = 10;

- присвоение - присваивается новое значение уже объявленной инициализированной переменной. Пример: x = 5;

5.

Выравнивание данных в памяти может повысить производительность, поскольку оно группирует объекты данных в соответствие с естественными границами памяти, облегчая процессору доступ к ним. Это уменьшает потребность в многократной выборке данных из памяти, сокращая таким образом время на каждое обращение процессора к памяти.