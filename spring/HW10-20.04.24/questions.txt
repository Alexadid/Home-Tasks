1. Модель OSI

Модель OSI была создана для стандартизации телекоммуникационных и компьютерных систем и совместимости независимо от технологии, лежащей в их основе. Модель позволяет достигать этого путём разделения сетевого взаимодействия на семь абстрактных уровней, каждый из которых отвечает за различные аспекты сетевого процесса.

2. Канальный уровень

Данный уровень обычно относится к канальному уровню передачи данных (2-ой слой), хотя этот термин не является стандартным в рамках самой модели. Этот уровень необходим для управления форматированием данных для передачи и контроля доступа к физической сетевой среде. Он инкапсулирует пакеты данных во фреймы, которые состоят из заголовка, полезной нагрузки и трейлера. Заголовок содержит адреса источника и назначения и может содержать флажки проверки ошибок; это позволяет управлять потоком данных и обеспечивает целостность данных при передаче фреймов между устройствами в одной сети. Полезная нагрузка содержит фактические пользовательские данные. Трейлер, обычно содержащий последовательность проверки кадров (FCS), используется для обнаружения ошибок, чтобы убедиться, что данные не были повреждены во время передачи. Эти компоненты вместе обеспечивают надежную и эффективную передачу данных по сети.

3. Сетевой уровень

Сетевой уровень (3-ий слой) в первую очередь управляет маршрутизацией, адресацией и обработкой пакетов в различных сетях. Он гарантирует, что пакеты данных находят наиболее эффективный путь между источником и получателем, используя логические адреса, такие как IP-адреса, необходимые для навигации по сложным сетевым структурам. Эта возможность отличается от 2-ого слоя, который работает только в пределах одного сегмента сети или между непосредственно подключенными устройствами, обеспечивая локальное обнаружение ошибок, их исправление и синхронизацию фреймов. Канальный уровень передачи данных использует MAC-адреса, подходящие для локальных сетей, но неэффективные для маршрутизации в более крупных сетях. Без сетевого уровня передача данных ограничивалась бы локализованными настройками, поскольку не было бы механизма для маршрутизации данных по нескольким взаимосвязанным сетям или управления трафиком данных в обширных сетевых топологиях.

4. IP

Пакет IPv4 состоит из нескольких частей, каждая из которых предназначена для определенных функций:

Номер версии (4 бита): d этом поле указывается версия используемого протокола IP. В настоящее время широко используется версия 4 (IPv4), при этом осуществляется переход к версии 6 (IPv6).

Длина заголовка (IHL) (4 бита): eказывает длину заголовка в 32-разрядных словах, обычно 20 байт (пять 32-разрядных слов). Эта длина может увеличиваться до 60 байт за счет дополнительных байт, используемых в поле Опции.

Тип сервиса (1 байт): определяет приоритет пакета и критерии маршрутизации. Первые три бита образуют подполе "Приоритет" с приоритетами от 0 (обычный) до 7 (контрольный пакет). Это поле также содержит биты для выбора маршрутов на основе минимальной задержки, максимальной пропускной способности или надежности, хотя установка более чем одного из этих критериев является редкостью из-за компромиссов.

Общая длина (2 байта): указывает общую длину пакета, включая заголовок и данные. Максимальная длина составляет 65 535 байт, но обычно не превышает 1500 байт, чтобы поместиться в поле данных фрейма Ethernet.

Идентификатор пакета (2 байта): используется для идентификации фрагментов исходного пакета при повторной сборке.

Флаги (3 бита): занимает 3 бита и содержит признаки, связанные с фрагментацией. Установленный бит DF (Do not Fragment) запрещает маршрутизатору фрагментировать данный пакет, а установленный бит MF (More Fragments) говорит о том, что данный пакет является промежуточным (не последним) фрагментом. Оставшийся бит зарезервирован.

Смещение фрагмента (13 бит): указывает, где этот фрагмент находится в исходном пакете, что полезно для повторной сборки фрагментированных пакетов.

Время жизни (TTL) (1 байт): ограничивает время жизни пакета в сети, уменьшая его на единицу на каждом маршрутизаторе, предотвращая бесконечные циклы.

Идентификатор Протокол верхнего уровня (1 байт): определяет протокол более высокого уровня, используемый в части данных пакета, такой как TCP, UDP или ICMP.

Контрольная сумма заголовка (2 байта): обеспечивает целостность заголовка, пересчитывается при каждом изменении поля заголовка.

IP-адрес источника (32 бита) и IP-адрес получателя (32 бита): укажите адреса отправки и получения.

Опции (переменной длины): Используются для отладки и управления сетью, но, как правило, не используются в обычных коммуникациях. Предоставляет такие функциональные возможности, как определение маршрута и временная метка.

Выравнивание: обеспечивает завершение заголовка 32-разрядной границей, при необходимости заполняемой нулями.

5. Определение MAC адреса по IP адресу в сети и наоборот

Взаимосвязь между IP-адресами и MAC-адресами в сети регулируется протоколом разрешения адресов (ARP). Когда устройство хочет установить связь с другим устройством в локальной сети, но знает только его IP-адрес, оно отправляет ARP-запрос, широковещательное сообщение с вопросом "У кого есть IP-адрес X.X.X.X?". Устройство с этим IP-адресом сообщает свой MAC-адрес в ARP-ответе, отправленном непосредственно на проситель. Затем этот MAC-адрес сохраняется в ARP-кэше отправителя запроса, чтобы избежать повторных ARP-запросов по одному и тому же адресу. Протокол ARP работает в локальной сети, и для обмена данными между различными сетями вместо MAC-адреса устройства назначения используется MAC-адрес маршрутизатора следующего уровня. ARP в основном используется для сетей IPv4, в то время как IPv6 использует протокол обнаружения соседей (NDP) для аналогичной цели.

6. IPv4 и IPv6

В протоколе IPv4 используется 32-разрядная схема адресации, позволяющая использовать примерно 4.3 миллиарда уникальных адресов, в то время как в протоколе IPv6 используется 128-разрядная схема, которая значительно увеличивает их количество до практически неограниченного, удовлетворяя потребность в большем количестве адресов по мере того, как все больше устройств подключается к Интернету. Адреса IPv6 записываются в шестнадцатеричном формате и разделяются двоеточиями, что отличается от десятичного формата IPv4 с разделением точками. Кроме того, IPv6 упрощает заголовки пакетов для более эффективной обработки, интегрирует расширенные протоколы безопасности, такие как IPSec, непосредственно в свое ядро и поддерживает автоматическую настройку устройств с помощью автоконфигурации адресов без учета состояния (SLAAC). Переход на IPv6 был в первую очередь обусловлен ограниченным адресным пространством IPv4, которого было недостаточно для размещения растущего числа интернет-устройств по всему миру, а также необходимостью повышения эффективности и безопасности сетевого уровня.

7. Проблема нехватки IPv4 адресов

Нехватка IPv4-адресов в основном решается с помощью нескольких ключевых стратегий: преобразование сетевых адресов (NAT) позволяет нескольким устройствам совместно использовать один общедоступный IPv4-адрес, сохраняя адреса. Частные IP-диапазоны повторно используются в локальных сетях, что позволяет избежать необходимости в уникальных общедоступных адресах для каждого устройства. Создание подсетей оптимизирует распределение ограниченного количества IPv4-адресов в более крупных сетях.

8. Приватных адреса (серые) и публичные (белые)

Серые IP-адреса используются во внутренних сетях и не предназначены для маршрутизации в глобальном Интернете. Они позволяют осуществлять связь внутри организаций без использования общедоступных IP-адресов и поставляются из определенных не маршрутизируемых диапазонов, таких как 10.0.0.0-10.255.255.255, 172.16.0.0-172.31.255.255 и 192.168.0.0-192.168.255.255. Устройства с приватными IP-адресами обычно подключаются к Интернету с помощью преобразования сетевых адресов (NAT), которое преобразует их приватные IP-адреса в публичные IP-адреса.

Белые IP-адреса уникальны и доступны непосредственно через Интернет, используются для размещения серверов и обеспечения прямого доступа в Интернет. Они признаны во всем мире, маршрутизируются через Интернет и распределяются региональными интернет-реестрами. Эта система сохраняет ограниченное число общедоступных IP-адресов, особенно в формате IPv4, сохраняя при этом функциональность и безопасность сети.

9. Протоколы транспортного уровня

Данные протоколы решают ключевые проблемы при передаче данных между устройствами в сети. Они управляют установлением, обслуживанием и завершением соединения между хостами, обеспечивая надежную связь. Эти протоколы сегментируют большие файлы данных для передачи и повторно собирают их на устройстве, обрабатывают поток данных, предотвращая перегрузку приемника, и обеспечивают доставку пакетов данных в правильном порядке. Они также обнаруживают и исправляют ошибки с помощью таких механизмов, как контрольные суммы и повторные передачи. Кроме того, транспортные протоколы обеспечивают мультиплексирование, позволяя нескольким приложениям использовать сеть одновременно, различая потоки данных на основе заголовков и номеров портов.

10. TCP и UDP протоколы

TCP (протокол управления передачей) и UDP (протокол пользовательских дейтаграмм) являются основными протоколами транспортного уровня, каждый из которых адаптирован для конкретных сетевых потребностей. Протокол TCP ориентирован на подключение и обеспечивает надежную, упорядоченную и безошибочную передачу данных. Он включает в себя такие функции, как подтверждение, повторная передача и управление потоком данных для управления доставкой данных и перегрузкой сети.

В противовес TCP, UDP не требует подключения и отдает приоритет скорости и эффективности, а не надёжности, что подходит для приложений, где быстрая доставка важнее точности. Основными преимуществами UDP являются низкие затраты системных ресурсов и более быстрая передача данных, но в нём отсутствуют механизмы обеспечения доставки и заказа, что приводит к потенциальной потере данных.

По сути, TCP используется там, где надежность имеет решающее значение, в то время как UDP предпочтителен для приложений, требующих скорости и низкой задержки.

11. Части, составляющие TCP/UDP

TCP содержит номера портов источника и назначения, последовательность и номера подтверждения для заказа и подтверждения доставки данных, смещение данных для указания длины заголовка и флаги, такие как SYN и ACK, для управления подключениями. Он также содержит размер окна для управления потоком, контрольную сумму для проверки ошибок, указатель для определения приоритета данных, дополнительные опции для повышения производительности и фактическую полезную нагрузку данных.

UDP проще, он содержит порты источника и назначения, длину дейтаграммы и контрольную сумму для обеспечения целостности данных.

12. NAT на примере TCP соединения

NAT изменяет IP-адреса и порты IP-пакетов при их прохождении через маршрутизатор, позволяя нескольким устройствам в частной сети совместно использовать один общедоступный IP-адрес. Вот как это работает с TCP-соединением: устройство в частной сети пытается подключиться к интернет-серверу; его пакет сначала поступает на устройство NAT, которое изменяет частный IP-адрес и порт устройства на общедоступный IP-адрес маршрутизатора и новый порт. Этот пакет отправляется на сервер, который отвечает на общедоступный IP-адрес и порт. Затем устройство NAT отменяет эти изменения для входящего пакета, перенаправляя его обратно на частный IP-адрес и порт исходного устройства. NAT решает проблему нехватки IP-адресов, позволяя многим устройствам получать доступ к Интернету по одному общедоступному IP-адресу, сохраняя ограниченное количество доступных общедоступных IPv4-адресов и повышая безопасность, скрывая детали внутренней сети от внешнего мира.

13. Переброс портов

Это метод настройки сети, используемый для направления определённого сетевого трафика на определённое устройство в локальной сети. Обычно он настраивается на маршрутизаторе или шлюзе, использующем NAT. Вот как это работает: определенные порты на внешнем интерфейсе маршрутизатора предназначены для приема определенных типов трафика, который затем перенаправляется на заранее определенный внутренний IP-адрес и порт. Эта настройка часто используется для того, чтобы разрешить внешним устройствам доступ к сервисам, размещенным в частной сети, таким как веб-серверы, FTP-серверы и подобное. Переброс портов необходим для приложений, которым требуются входящие соединения, но которые расположены за маршрутизатором NAT, который по умолчанию блокирует такие соединения. К приложениям, использующим переадресацию портов, относятся  серверно-клиентское программное обеспечение, VoIP-сервисы, онлайн-игры...

14. IP-адрес в настройках и на сайтах

С учётом того, сколько об IP-адресах уже написано выше, ответ очевиден, но всё же... В настройках вашей операционной системы указанный IP-адрес является вашим личным IP-адресом. С другой стороны, сайты проверки IP-адресов показывают ваш общедоступный IP-адрес, который ваш интернет-провайдер назначает вашему маршрутизатору или модему для подключения к Интернету.